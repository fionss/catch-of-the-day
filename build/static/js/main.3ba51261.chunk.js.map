{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","propType","PropTypes","object","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","protoTypes","shape","string","number","func","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.3ba51261.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propType = {\n    history: PropTypes.object,\n  };\n\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. Get the text from that inputv\n    const storeName = this.myInput.current.value;\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`);\n  }\n  render() {\n    return (\n      <form className = \"store-selector\" onSubmit = {this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input type= \"text\" ref = {this.myInput} required placeholder= \"Store Name\" defaultValue ={getFunName()}/>\n        <button type= \"submit\">Visit Store </button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header>\n    <h1>\n      Catch\n      <span className =\"ofThe\">\n        <span className =\"of\">Of</span>\n        <span className =\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className = \"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  }\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key: key,  \n      timeout: { enter:500, exit:500 }\n    };\n    // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n      <CSSTransition {...transitionOptions}>\n      <li key ={key}>\n        Sorry {fish ? fish.name : 'fish'} is no longer available\n      </li>\n      </CSSTransition>\n      );\n    }\n   return (\n     <CSSTransition {...transitionOptions}>\n       <li key={key}>\n         <span>\n           <TransitionGroup component =\"span\" className =\"count\">\n             <CSSTransition \n               classNames = \"count\" \n               key ={count} \n               timeout = {{enter:500, exit:500}}\n               >\n                <span>{count}</span>\n             </CSSTransition>\n           </TransitionGroup>\n             lbs {fish.name}\n              {formatPrice(count * fish.price)}\n           <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n         </span>\n       </li>\n     </CSSTransition>\n   );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key ) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n    \n    return (\n     <div className =\"order-wrap\">\n      <h2>Order</h2>\n      <TransitionGroup component =\"ul\" className =\"order\">\n        {orderIds.map(this.renderOrder)}\n      </TransitionGroup>\n\n      <div className =\"total\">\n        Total:\n        <strong>{formatPrice(total)}</strong>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form className =\"fish-edit\" onSubmit ={this.createFish}>\n        <input name =\"name\" ref ={this.nameRef} type =\"text\" placeholder =\"Name\" />\n        <input name =\"price\" ref ={this.priceRef} type =\"text\" placeholder =\"Price\"/>\n        <select name =\"status\" ref ={this.statusRef}>\n          <option value =\"available\">Fresh!</option>\n          <option value =\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name =\"desc\" ref ={this.descRef} placeholder =\"Desc\" />\n        <input name =\"image\" ref ={this.imageRef} type =\"text\" placeholder =\"Image\" />\n        <button type =\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n  }\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that fish\n    // 1. Take a copy of the current fish\n    const updatedFish = { \n      ...this.props.fish, \n      [event.currentTarget.name] : event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return <div className =\"fish-edit\">\n      <input type =\"text\" \n      name =\"name\" \n      onChange = {this.handleChange} \n      value = {this.props.fish.name} \n      />\n      <input type=\"text\" \n      name=\"price\" \n      onChange={this.handleChange} \n      value = {this.props.fish.price}\n       />\n      <select type=\"text\" name=\"status\" onChange={this.handleChange} value = {this.props.fish.status}>\n        <option value =\"available\">Fresh!</option>\n        <option value =\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea name=\"desc\" onChange={this.handleChange} value ={this.props.fish.desc} />\n      <input type=\"text\" \n      name=\"image\" \n      onChange={this.handleChange} \n      value ={this.props.fish.image}\n       />\n       <button onClick ={() => this.props.deleteFish(this.props.index)}>\n         Remove Fish\n       </button>\n    </div>\n  }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n  <nav className =\"Login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button className =\"facebook\" \n    onClick = {() => props.authenticate(\"Facebook\")}\n    >\n      Log In With Facebook\n      </button>\n    <button className =\"github\" \n    onClick ={() => props.authenticate(\"Github\")}\n    >\n      Log In With Github\n      </button>\n    <button className = \"twitter\" \n    onClick ={() => props.authenticate(\"Twitter\")}\n    >\n      Log In With Twitter\n      </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate : PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAdCb9ol4GvyLofNPvnKal6GSISGn1okBo\",\n    authDomain: \"catch-of-the-day-ori-jay.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-ori-jay.firebaseio.com\",\n});\n\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export \nexport { firebaseApp };\n\n// This is a default export\nexport default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // 2. Claim it if there's no owner \n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  }\n  \n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n    .auth()\n    .signInWithPopup(authProvider)\n    .then(this.authHandler);\n  };\n\n  logout = async () =>{\n    console.log('Logging out!');\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  }\n\n\n  render() {\n    const logout = <button onClick = {this.logout}>Log Out</button>;\n    // 1. Check if they are logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    \n    // 2. Check if they are not the owner of the store \n    if (this.state.uid !== this.state.owner) {\n      return (<div>\n        <p>Sorry you are not the owner!</p>\n        {logout}\n      </div>\n      );\n    }\n\n    // 3. They must be the owner, just render the inventory\n    return (\n      <div className =\"inventory\">\n        <h2>Inventory</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => \n        <EditFishForm \n        key ={key} \n        index ={key}\n        fish= {this.props.fishes[key]} \n        updateFish = {this.props.updateFish}\n        deleteFish = {this.props.deleteFish}\n        />\n        )}\n        <AddFishForm addFish = {this.props.addFish}/>\n        <button onClick = {this.props.loadSampleFishes}>\n          Load Simple Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  static protoTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func,\n  };\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className =\"menu-fish\">\n        <img src = {image} alt ={name}/>\n        <h3 className = \"fish-name\">{name}\n        <span className =\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled = {!isAvailable} onClick ={() => this.props.addToOrder(this.props.index)}>\n          {isAvailable ? 'Add To Order' : 'Sold Out!'}\n        </button>\n      </li>\n    )\n  }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes : {},\n    order : {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our local storage \n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: \"fishes\"\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    localStorage.setItem(\n      this.props.match.params.storeId, \n      JSON.stringify(this.state.order)\n    );\n    console.log('it updated');\n   }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addFish = (fish) => {\n    // 1. Take a copy of the existing state\n    const fishes = {...this.state.fishes} \n    // 2. Add our new fishes to that fish variable\n    fishes[`fish ${Date.now()}`] = fish;\n    // 3. Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // 1. Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // 2. Update the state \n    fishes[key] = updatedFish;\n    // 3. Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = (key) => {\n    // 1. take a copy of state\n    const fishes = { ...this.state.fishes };\n    // 2. update the state\n    fishes[key] = null;\n    // 3. update state\n    this.setState({ fishes });\n  }\n\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes});\n  };\n\n  addToOrder = (key) => {\n    // 1.Take a copy of a state\n    const order = {...this.state.order}\n    // 2.Either add to order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3.Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1.Take a copy of a state\n    const order = { ...this.state.order }\n    // 2. Remove that item from order\n    delete order[key];\n    // 3.Call setState to update our state object\n    this.setState({ order });\n  }\n\n\n  render() {\n    return (\n      <div className = \"catch-of-the-day\">\n        <div className = \"menu\">\n          <Header tagline =\"Fresh Sea Food Market\"/>\n          <ul className = \"fishes\">\n            {Object.keys(this.state.fishes).map(key => <Fish key ={key} index = {key} details = {this.state.fishes[key]} \n            addToOrder = {this.addToOrder} />)}\n          </ul>\n        </div>\n         <Order fishes ={this.state.fishes} order ={this.state.order} removeFromOrder = {this.removeFromOrder}/> \n         <Inventory \n        addFish = {this.addFish} \n        updateFish = {this.updateFish}\n        deleteFish = {this.deleteFish}\n        loadSampleFishes = {this.loadSampleFishes} \n        fishes = {this.state.fishes}\n        storeId = {this.props.match.params.storeId}\n        /> \n       \n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!</h2>\n  </div>\n\n);\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path = \"/\" component = {StorePicker} />\n      <Route path = \"/store/:storeId\" component = {App}/>\n      <Route component={NotFound} />\n\n\n    </Switch>\n  </BrowserRouter> \n\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}