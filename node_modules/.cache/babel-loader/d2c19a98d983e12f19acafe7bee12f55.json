{"ast":null,"code":"import _classCallCheck from \"/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nvar Order = /*#__PURE__*/function (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  var _super = _createSuper(Order);\n\n  function Order() {\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available';\n      var transitionOptions = {\n        classNames: \"order\",\n        key: key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      }; // Make sure the fish is loaded before we continue\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(\"li\", {\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 7\n          }\n        }, \"Sorry \", fish ? fish.name : 'fish', \" is no longer available\"));\n      }\n\n      return /*#__PURE__*/React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"span\",\n        className: \"count\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"count\",\n        key: count,\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, count))), \"lbs\", fish.name, formatPrice(count * fish.price), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      }, \"\\xD7\"))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }\n      }, \"Order\"), /*#__PURE__*/React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, orderIds.map(this.renderOrder)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"total\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }\n      }, \"Total:\", /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nOrder.propTypes = {\n  fishes: PropTypes.object,\n  order: PropTypes.object,\n  removeFromOrder: PropTypes.func\n};\nexport default Order;","map":{"version":3,"sources":["/Users/fionaattah/Desktop/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/Order.js"],"names":["React","PropTypes","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func,\n  }\n\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available';\n    const transitionOptions = {\n      classNames: \"order\",\n      key: key,  \n      timeout: { enter:500, exit:500 }\n    };\n    // Make sure the fish is loaded before we continue\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n      <CSSTransition {...transitionOptions}>\n      <li key ={key}>\n        Sorry {fish ? fish.name : 'fish'} is no longer available\n      </li>\n      </CSSTransition>\n      );\n    }\n   return (\n     <CSSTransition {...transitionOptions}>\n       <li key={key}>\n         <span>\n           <TransitionGroup component =\"span\" className =\"count\">\n             <CSSTransition \n               classNames = \"count\" \n               key ={count} \n               timeout = {{enter:500, exit:500}}\n               >\n                <span>{count}</span>\n             </CSSTransition>\n           </TransitionGroup>\n\n             lbs{fish.name}\n           {formatPrice(count * fish.price)}\n           <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n         </span>\n       </li>\n     </CSSTransition>\n   );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key ) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + (count * fish.price);\n      }\n      return prevTotal;\n    }, 0);\n    \n    return (\n     <div className =\"order-wrap\">\n      <h2>Order</h2>\n      <TransitionGroup component =\"ul\" className =\"order\">\n        {orderIds.map(this.renderOrder)}\n      </TransitionGroup>\n\n      <div className =\"total\">\n        Total:\n        <strong>{formatPrice(total)}</strong>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}